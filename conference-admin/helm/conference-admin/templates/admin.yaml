apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-admin-deployment
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: admin
  template:
    metadata:
      labels:
        app: admin
    spec:
      serviceAccountName: admin-dashboard
      containers:
      - name: admin
        image: "{{ .Values.registry }}/{{ .Values.image }}:{{ .Values.tag }}"
        imagePullPolicy: Always  
        env: 
        - name: POD_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName  
        livenessProbe:
          httpGet:
            path: /health/readiness
            port: 8080
        readinessProbe:
          httpGet:
            path: /health/liveness
            port: 8080
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: admin
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: admin
  ports:
  - port: 80
    targetPort: 8080

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-dashboard


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: admin-dashboard-cluster-role
  name: admin-cluster-role
rules:
- apiGroups: 
  - salaboy.com
  resources: ["environments"]
  verbs:
  - get
  - list
  - watch
  - create
  - delete

--- 

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: envs-global
subjects:
- kind: ServiceAccount
  name: admin-dashboard
  namespace: default
roleRef:
  kind: ClusterRole
  name: admin-cluster-role
  apiGroup: rbac.authorization.k8s.io